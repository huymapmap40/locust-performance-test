from locust import HttpUser, TaskSet, task
import random
import json


class UserBehavior(TaskSet):
    def __init__(self, parent):
        super(UserBehavior, self).__init__(parent)

    def on_start(self):
        self.storeIds = [2914, 2916, 19164, 19166, 19168, 19170, 19172, 19174, 19176, 19178, 19180, 19182, 19184, 19186, 19188, 19190, 19192, 19194, 19196, 19198, 19200, 19202, 19204, 19206, 19208, 19210, 19212, 19214, 19216, 19218, 19226, 19228, 19230, 19232, 19234, 19244, 19246, 19250, 19252, 19256, 19258, 19260, 19262, 19264, 19266, 19276, 19302, 20621, 20623, 20625, 23310, 23320, 23322, 23325, 23327, 23329, 23333, 23335, 23337, 23339, 23343, 23345, 23347, 23351, 23357, 23359, 23361, 23363, 23364, 23366, 23369, 23371, 23373, 23375, 23377, 23379, 23381, 23385, 23387, 23389, 23391, 23393, 23395, 23397, 23399, 23403, 23408, 23410, 23411, 23413, 23415, 23417, 23419, 23423, 23437, 23439, 23449, 23450, 23498, 23502, 23530, 23531, 23532, 23533, 23534, 23548, 23549, 24194, 24210, 24211, 24228, 24240, 24244, 24312, 24313, 24314, 24321, 24331, 24335, 24361, 24362,
                         24363, 24364, 24365, 24368, 24369, 24370, 24371, 24372, 24373, 24409, 24412, 24418, 24420, 24431, 24435, 24458, 24459, 24496, 24498, 24499, 24500, 24501, 24516, 24556, 24557, 24585, 24586, 24604, 24607, 24615, 24616, 24630, 24637, 24638, 24640, 24641, 24680, 24696, 24697, 24701, 24743, 24758, 24762, 24763, 24764, 24765, 24768, 24799, 24804, 24805, 24818, 24829, 24893, 24911, 24923, 24938, 24941, 24975, 25016, 25023, 25024, 25032, 25045, 25074, 25105, 25106, 25108, 25109, 25110, 25111, 25127, 25129, 25131, 25141, 25209, 25215, 25218, 25227, 25241, 25243, 25260, 25289, 25290, 25313, 25336, 25385, 25418, 25464, 25482, 25486, 25529, 25542, 25569, 25570, 25571, 25583, 25664, 25668, 25669, 25674, 25704, 25751, 25752, 25753, 25754, 25784, 25785, 25787, 25803, 25804, 25805, 25877, 25886, 25918, 25919, 25927, 25928, 25932, 25957, 25959, 25960, 25961, 25962, 25965, 25967, 25979, 25980, 25994, 26088, 26089]
        self.storeId = random.choice(self.storeIds)
        self.activeTime = '2021-07-18T00:00:00.000Z'

    @task
    def getV1ActiveCommercials(self):
        with self.client.get(
            url='/rat/v1/activecommercials?storeId=' +
                str(self.storeId) + '&activeTime=' + self.activeTime, catch_response=True
        ) as response:
            if response.status_code == 400 or response.status_code == 200 or response.status_code == 422:
                response.success()

    @task
    def v2Product(self):
        with self.client.get(
            url='/rat/v2/activecommercials?storeIds=' +
                str(self.storeId) + '&activeTime=' + self.activeTime, catch_response=True
        ) as response:
            if response.status_code == 400 or response.status_code == 200 or response.status_code == 422:
                response.success()


class User(HttpUser):
    tasks = [UserBehavior]
    min_wait = 300
    max_wait = 2000
