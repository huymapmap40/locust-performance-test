# SBGO NCs
# const ids = [];
# db.getCollection("user-profiles").find({isNewCustomer: true}).limit(50).forEach((it)=> { 
#     ids.push(it._id)
# });
# console.log((JSON.stringify(ids)))

nc_ids = [4666202,3955221,4694251,4458054,4485951,4694279,4694276,3540496,4595592,3767595,4694350,4694373,4694384,4693980,3812197,3781042,4693423,4693180,4693031,4692971,4692424,4692164,4691911,4691699,4691606,4690368,4690212,4689891,4689128,4688759,4688610,4688022,4688020,4687999,4687661,4687482,4687211,4686964,4686634,4686583,4686553,4686552,4686526,4685989,4685780,4685719,4685622,4685366,4685284,4685192]

# Most active users
# const ids = []
# db.getCollection('user-profiles').aggregate([
#     {$match: {isNewCustomer: false}},
#     {$addFields: {totalBrands: {$size: "$transactedBrands"}}},
#     {$sort: {totalBrands: -1}},
#     {$limit: 100}
# ]).forEach((it) => {
#     ids.push(it._id)
# })
# console.log((JSON.stringify(ids)))

most_active_user_ids = [14365,3891399,1679409,3166983,53749,272162,4269905,3814388,684404,826399,826198,3921304,1399601,3693346,151114,3533761,102468,2375702,4541360,783572,3874267,1517358,3228975,3772315,3127059,4487824,135501,1099460,653994,298745,330254,4746017,3274006,356735,4398165,104963,2780450,1329329,3783717,271198,3998537,31877,396680,575008,103804,2580967,4579412,3473894,255426,22442,287970,3822824,3570535,17924,94350,100504,1957806,3425402,19525,3685765,39080,126483,2026962,26704,335678,8259,694229,764590,244832,4119617,3696184,3453909,975076,4675523,2201108,840357,290710,4683049,2830562,3372666,466723,1238890,3401468,18384,85285,101320,4237868,3779568,1990363,165805,319895,3732186,1484153,2615718,3984923,3434545,81042,1399564,3863115,3879128]

# group of users with different distribution for each segment
# NC: 10%, EC: 90%
all_user_ids = nc_ids[0:10] + most_active_user_ids[0:90]

