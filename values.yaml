Name: locust

tasksRoot: "tasksall"

image:
  repository: locustio/locust
  tag: 2.12.1
  pullPolicy: IfNotPresent
  pullSecrets:
  - name: dockerhub

service:
  name: master-web
  type: NodePort
  externalPort: 8089
  annotations: {}
  extraLabels: {}

ingress:
  enabled: false
  labels: {}
  annotations: {}
  tls: []
  hosts: []

# extra volumes, volumeMounts and envs for both worker and master pods
extraVolumes: []
# extraVolumes:
# - name: mySecretVolume
#   secret:
#     secretName: mySecret
# - name: myConfigMapVolume
#   configMap:
#     name: myConfigMap
extraVolumeMounts: []
# extraVolumeMounts:
# - name: mySecretVolume
#   mountPath: /locust/secrets/mySecretVolume/
extraEnvs: []
# extraEnvs:
# - name: HELLO
#   value: WORLD
# - name: MY_SECRET
#   valueFrom:
#     secretKeyRef:
#       name: mySecret
#       key: mySecretKey

master:
  config:
    target-host: https://site.example.com
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 200m
      memory: 256Mi
  nodeSelector: {}
    # kops.k8s.io/instancegroup: master
  tolerations: {}
  # - key: "application"
  #   operator: "Equal"
  #   value: "api"
  #   effect: "NoSchedule"
worker:
  config:

    # Optional parameter to use an existing configmap instead of deploying one with the Chart
    # configmapName: locust-worker-configs

    # all files from specified configmap (or tasks folder) are mounted under `/locust-tasks`
    locust-script: "/locust-tasks/tasks.py"
  replicaCount: 2
  resources:
    limits:
      cpu: 600m
      memory: 512Mi
    requests:
      cpu: 600m
      memory: 512Mi
  nodeSelector: {}
    # kops.k8s.io/instancegroup: worker
  tolerations: {}
  # - key: "application"
  #   operator: "Equal"
  #   value: "api"
  #   effect: "NoSchedule"
  maxSurge: "25%"
  maxUnavailable: "25%"
redis:
  enabled: false
  image:
    repository: "redis"
    tag: 5.0.4
  resources:
    limits:
      cpu: 2400m
      memory: 512Mi
    requests:
      cpu: 1200m
      memory: 256Mi
  service:
    name: redis
    type: NodePort
    externalPort: 6379
    annotations: {}
    extraLabels: {}
global:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: dedicated
            operator: In
            values:
            - "load-test"
          - key: kubernetes.io/arch
            operator: In
            values:
            - arm64
  tolerations:
  - effect: NoSchedule
    key: dedicated
    operator: Equal
    value: load-test
  - effect: NoSchedule
    key: kubernetes.io/arch
    operator: Equal
    value: arm64

initContainers:
  resources:
    limits:
      memory: 100Mi
    requests:
      cpu: 5m
      memory: 20Mi
